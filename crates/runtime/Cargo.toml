[package]
name = "runtime"
version = "0.1.0"
edition = "2021"

[dependencies]
deno_ast.workspace = true
deno_fs.workspace = true
deno_io.workspace = true
deno_core.workspace = true
deno_console.workspace = true
deno_config.workspace = true
deno_crypto.workspace = true
deno_fetch.workspace = true
deno_http.workspace = true
deno_net.workspace = true
deno_url.workspace = true
deno_tls.workspace = true
deno_webidl.workspace = true
deno_web.workspace = true
deno_websocket.workspace = true
deno_broadcast_channel.workspace = true
deno_canvas.workspace = true
deno_webgpu.workspace = true
deno_semver.workspace = true
deno_npm.workspace = true

runtime_base = { version = "0.1.0", path = "../runtime_base" }
cpu_timer = { version = "0.1.0", path = "../cpu_timer" }
http_utils = { version = "0.1.0", path = "../http_utils" }
module_loader = { version = "0.1.0", path = "../module_loader" }
npm = { version = "0.1.0", path = "../npm" }
graph = { version = "0.1.0", path = "../graph" }

sb_core = { version = "0.1.0", path = "../ext/core" }
sb_node = { version = "0.1.0", path = "../ext/node" }
sb_event_worker = { version = "0.1.0", path = "../ext/event_worker" }
sb_workers = { version = "0.1.0", path = "../ext/workers" }
sb_env = { version = "0.1.0", path = "../ext/env" }
sb_os = { version = "0.1.0", path = "../ext/os" }
sb_ai = { version = "0.1.0", path = "../ext/ai" }
sb_fs = { version = "0.1.0", path = "../ext/fs" }

async-trait.workspace = true
thiserror.workspace = true
monch.workspace = true
once_cell.workspace = true
anyhow.workspace = true
bytes.workspace = true
httparse.workspace = true
hyper = { workspace = true, features = ["full"] }
hyper_v014 = { workspace = true, features = ["full", "backports"] }
hyper-util = { workspace = true, features = ["server-graceful"] }
http.workspace = true
http_v02.workspace = true
http-body-util.workspace = true
import_map.workspace = true
log.workspace = true
serde = { workspace = true, features = ["derive"] }
tokio.workspace = true
tokio-util = { workspace = true, features = ["rt"] }
futures-util.workspace = true
url.workspace = true
uuid.workspace = true
eszip.workspace = true
enum-as-inner.workspace = true
urlencoding.workspace = true
scopeguard.workspace = true
ctor.workspace = true
fastwebsockets.workspace = true
notify.workspace = true 
pin-project.workspace = true
rustls-pemfile.workspace = true
tracing.workspace = true

reqwest_v011 = { package = "reqwest", version = "0.11", features = ["stream", "json", "multipart"] }
tls-listener = { version = "0.10", features = ["rustls"] }
async-scoped = { version = "0.9.0", features = ["use-tokio"] }
flume = "0.11.0"
cooked-waker = "5"
tokio-rustls = "0.25.0"

[dev-dependencies]
tokio-util = { workspace = true, features = ["rt", "compat"] }
tracing-subscriber = { workspace = true, features = ["env-filter", "tracing-log"] }

serial_test = "3.0.0"
async-tungstenite = { version = "0.25.0", default-features = false }
tungstenite = { version = "0.21.0", default-features = false, features = ["handshake"] }

[build-dependencies]
deno_ast.workspace = true
deno_fs.workspace = true
deno_io.workspace = true
deno_console.workspace = true
deno_crypto.workspace = true
deno_fetch.workspace = true
deno_http.workspace = true
deno_net.workspace = true
deno_url.workspace = true
deno_tls.workspace = true
deno_webidl.workspace = true
deno_web.workspace = true
deno_websocket.workspace = true
deno_broadcast_channel.workspace = true
deno_core.workspace = true
deno_canvas.workspace = true
deno_webgpu.workspace = true

graph = { version = "0.1.0", path = "../graph" }

sb_core = { version = "0.1.0", path = "../ext/core" }
sb_node = { version = "0.1.0", path = "../ext/node" }
sb_event_worker = { version = "0.1.0", path = "../ext/event_worker" }
sb_workers = { version = "0.1.0", path = "../ext/workers" }
sb_env = { version = "0.1.0", path = "../ext/env" }
sb_os = { version = "0.1.0", path = "../ext/os" }
sb_ai = { version = "0.1.0", path = "../ext/ai" }

anyhow.workspace = true 
bytes.workspace = true
hyper = { workspace = true, features = ["full"] }
http_v02.workspace = true
log.workspace = true
serde = { workspace = true, features = ["derive"] }
tokio.workspace = true
url.workspace = true

[features]
termination-signal-ext = []